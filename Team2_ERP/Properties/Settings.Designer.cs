//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Team2_ERP.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.4.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("새로고침 완료")]
        public string RefreshDone {
            get {
                return ((string)(this["RefreshDone"]));
            }
            set {
                this["RefreshDone"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("시작날짜가 종료날짜보다 큽니다.")]
        public string CalendarError {
            get {
                return ((string)(this["CalendarError"]));
            }
            set {
                this["CalendarError"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("오류")]
        public string Error {
            get {
                return ((string)(this["Error"]));
            }
            set {
                this["Error"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("경고")]
        public string Warnning {
            get {
                return ((string)(this["Warnning"]));
            }
            set {
                this["Warnning"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point LoginStartLocation {
            get {
                return ((global::System.Drawing.Point)(this["LoginStartLocation"]));
            }
            set {
                this["LoginStartLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("성공적으로 암호가 변경되었습니다.")]
        public string PwdSucess {
            get {
                return ((string)(this["PwdSucess"]));
            }
            set {
                this["PwdSucess"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("이전 암호가 정확하지 않습니다.")]
        public string PwdFail {
            get {
                return ((string)(this["PwdFail"]));
            }
            set {
                this["PwdFail"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("완료")]
        public string Success {
            get {
                return ((string)(this["Success"]));
            }
            set {
                this["Success"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("실패")]
        public string Fail {
            get {
                return ((string)(this["Fail"]));
            }
            set {
                this["Fail"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("이전 암호를 입력하지 않으셨습니다.")]
        public string PwdNoInsertPrev {
            get {
                return ((string)(this["PwdNoInsertPrev"]));
            }
            set {
                this["PwdNoInsertPrev"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("새로운 암호를 입력하지 않으셨습니다.")]
        public string PwdNoInsertNew {
            get {
                return ((string)(this["PwdNoInsertNew"]));
            }
            set {
                this["PwdNoInsertNew"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("새로운 암호 확인을 입력하지 않으셨습니다.")]
        public string PwdNoInsertValid {
            get {
                return ((string)(this["PwdNoInsertValid"]));
            }
            set {
                this["PwdNoInsertValid"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("입력한 비밀번호와 다릅니다.")]
        public string PwdErrorValid {
            get {
                return ((string)(this["PwdErrorValid"]));
            }
            set {
                this["PwdErrorValid"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("검색 완료")]
        public string SearchDone {
            get {
                return ((string)(this["SearchDone"]));
            }
            set {
                this["SearchDone"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("삭제")]
        public string Delete {
            get {
                return ((string)(this["Delete"]));
            }
            set {
                this["Delete"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("정말로 삭제하시겠습니까?")]
        public string IsDelete {
            get {
                return ((string)(this["IsDelete"]));
            }
            set {
                this["IsDelete"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("삭제 완료")]
        public string DeleteDone {
            get {
                return ((string)(this["DeleteDone"]));
            }
            set {
                this["DeleteDone"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("삭제 실패")]
        public string DeleteError {
            get {
                return ((string)(this["DeleteError"]));
            }
            set {
                this["DeleteError"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("수정할 불량처리유형을 선택하지 않으셨습니다.")]
        public string ModDefectiveHandleError {
            get {
                return ((string)(this["ModDefectiveHandleError"]));
            }
            set {
                this["ModDefectiveHandleError"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("삭제할 불량처리유형을 선택하지 않으셨습니다.")]
        public string DelDefectiveHandleError {
            get {
                return ((string)(this["DelDefectiveHandleError"]));
            }
            set {
                this["DelDefectiveHandleError"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("필수항목을 입력하지 않으셨습니다.")]
        public string isEssential {
            get {
                return ((string)(this["isEssential"]));
            }
            set {
                this["isEssential"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("등록 완료")]
        public string AddDone {
            get {
                return ((string)(this["AddDone"]));
            }
            set {
                this["AddDone"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("등록 실패")]
        public string AddError {
            get {
                return ((string)(this["AddError"]));
            }
            set {
                this["AddError"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("수정 완료")]
        public string ModDone {
            get {
                return ((string)(this["ModDone"]));
            }
            set {
                this["ModDone"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("수정 실패")]
        public string ModError {
            get {
                return ((string)(this["ModError"]));
            }
            set {
                this["ModError"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("수정할 불량유형을 선택하지 않으셨습니다.")]
        public string ModDefectiveTypeError {
            get {
                return ((string)(this["ModDefectiveTypeError"]));
            }
            set {
                this["ModDefectiveTypeError"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("삭제할 불량유형을 선택하지 않으셨습니다.")]
        public string DelDefectiveTypeError {
            get {
                return ((string)(this["DelDefectiveTypeError"]));
            }
            set {
                this["DelDefectiveTypeError"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("수정할 비가동유형을 선택하지 않으셨습니다.")]
        public string ModDowntimeTypeError {
            get {
                return ((string)(this["ModDowntimeTypeError"]));
            }
            set {
                this["ModDowntimeTypeError"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("삭제할 비가동유형을 선택하지 않으셨습니다.")]
        public string DelDowntimeTypeError {
            get {
                return ((string)(this["DelDowntimeTypeError"]));
            }
            set {
                this["DelDowntimeTypeError"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("입력한 비밀번호가 잘못되었습니다.")]
        public string LoginPwdError {
            get {
                return ((string)(this["LoginPwdError"]));
            }
            set {
                this["LoginPwdError"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("사원번호가 비어있습니다.\r\n사원을 선택하여주세요.")]
        public string LoginEmpIDError {
            get {
                return ((string)(this["LoginEmpIDError"]));
            }
            set {
                this["LoginEmpIDError"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("사원명이 비어있습니다.\r\n사원을 선택하여주세요.")]
        public string LoginEmpNameError {
            get {
                return ((string)(this["LoginEmpNameError"]));
            }
            set {
                this["LoginEmpNameError"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("프로그램을 종료하시겠습니까?")]
        public string ProgramExit {
            get {
                return ((string)(this["ProgramExit"]));
            }
            set {
                this["ProgramExit"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("종료")]
        public string Exit {
            get {
                return ((string)(this["Exit"]));
            }
            set {
                this["Exit"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("환영합니다!")]
        public string Welcome {
            get {
                return ((string)(this["Welcome"]));
            }
            set {
                this["Welcome"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("권한설정 완료")]
        public string AuthDone {
            get {
                return ((string)(this["AuthDone"]));
            }
            set {
                this["AuthDone"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("권한설정 실패")]
        public string AuthError {
            get {
                return ((string)(this["AuthError"]));
            }
            set {
                this["AuthError"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("권한설정할 사원을 선택하지 않으셨습니다.")]
        public string ModAuthError {
            get {
                return ((string)(this["ModAuthError"]));
            }
            set {
                this["ModAuthError"] = value;
            }
        }
    }
}
