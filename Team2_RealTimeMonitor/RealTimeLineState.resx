<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        j6YK7Y0CAAAAAElFTkSuQmCC
</value>
  </data>
</root>